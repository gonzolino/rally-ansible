---
- hosts: all
  vars:
    # clouds must be defined on remote host in /etc/openstack/clouds.yaml
    clouds:
      admin: devstack-admin
    cirros_url: "http://download.cirros-cloud.net/0.3.5/cirros-0.3.5-x86_64-disk.img"
    rally_password: secret
    rally_projects:
      - rally
      - rally_network
    rally_users:
      - rally_backend
      - rally_user
    rally_roles:
      rally_backend:
        rally: admin
        rally_network: admin
      rally_user:
        rally: Member
        rally_network: Member
    rally_networks:
      rally_net:
        project: rally
        shared: yes
        external: yes
        # also enable corresponding lines at os_network when enabling these options
        # network_type: vlan
        # physical_network: physnet1
        # segmentation_id: 415
    rally_subnets:
      rally_sub:
        network: rally_net
        cidr: 10.244.11.0/24
        allocation_pool:
          start: 10.244.11.130
          end: 10.244.11.200
        gateway: 10.244.11.1
        dhcp: no
    rally_routers:
      rally_router:
        network: rally_net
        subnet: rally_sub
        ip: 10.244.11.2
  tasks:
    - name: "Download cirros image"
      get_url:
        url: "{{ cirros_url }}"
        dest: "/tmp/cirros.img"

    - name: "Register cirros image"
      os_image:
        cloud: "{{ clouds.admin }}"
        name: cirros
        container_format: bare
        disk_format: qcow2
        state: present
        filename: "/tmp/cirros.img"

    - name: "Create rally projects"
      os_project:
        cloud: "{{ clouds.admin }}"
        state: present
        name: "{{ item }}"
        domain: Default
        enabled: True
      with_items: "{{ rally_projects }}"

    - name: "Create rally users"
      os_user:
        cloud: "{{ clouds.admin }}"
        state: present
        name: "{{ item }}"
        password: "{{ rally_password }}"
        domain: Default
        default_project: rally
      with_items: "{{ rally_users }}"

    - name: "Assign roles to rally users"
      os_user_role:
        cloud: "{{ clouds.admin }}"
        user: "{{ item[0] }}"
        role: "{{ rally_roles[item[0]][item[1]] }}"
        project: "{{ item[1] }}"
      with_nested:
        - "{{ rally_users }}"
        - "{{ rally_projects }}"

    - name: "Create rally networks"
      os_network:
        cloud: "{{ clouds.admin }}"
        project: "{{ item.value.project }}"
        state: present
        name: "{{ item.key }}"
        shared: "{{ item.value.shared }}"
        external: "{{ item.value.external }}"
        # provider_network_type: "{{ item.value.network_type }}"
        # provider_physical_network: "{{ item.value.physical_network }}"
        # provider_segmentation_id: "{{ item.value.segmentation_id }}"
      with_dict: "{{ rally_networks }}"

    - name: "Create rally subnets"
      os_subnet:
        cloud: "{{ clouds.admin }}"
        project: "{{ rally_networks[item.value.network].project }}"
        state: present
        network_name: "{{ item.value.network }}"
        name: "{{ item.key }}"
        cidr: "{{ item.value.cidr }}"
        allocation_pool_start: "{{ item.value.allocation_pool.start }}"
        allocation_pool_end: "{{ item.value.allocation_pool.end }}"
        gateway_ip: "{{ item.value.gateway }}"
        enable_dhcp: "{{ item.value.dhcp }}"
      with_dict: "{{ rally_subnets }}"

    - name: "Create rally routers"
      os_router:
        cloud: "{{ clouds.admin }}"
        state: present
        name: "{{ item.key }}"
        network: "{{ item.value.network }}"
        external_fixed_ips:
          - subnet: "{{ item.value.subnet }}"
            ip: "{{ item.value.ip }}"
      with_dict: "{{ rally_routers }}"
